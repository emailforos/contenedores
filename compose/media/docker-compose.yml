version: "3"
#name: media
services:
  ############################################################################
  #                       MULTIMEDIA                                         #
  ############################################################################
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    restart: unless-stopped
    network_mode: host
    #    ports:
    #      - 8096:8096
    volumes:
      - ${DOCKERSDIR}/jellyfin/config:/config
      - ${DOCKERSDIR}/jellyfin/cache:/cache
      - ${SERIESDIR}:/media/tv
      - ${PELISDIR}:/media/movies
      - ${MUSICADIR}:/media/music
      - /etc/localtime:/etc/localtime:ro
    user: ${PUID}:${PGID}
  sonarr:
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERSDIR}/sonarr:/config
      - ${DLDIR}:/downloads
      - ${SERIESDIR}:/tv
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - qbittorrent
    networks:
      reddocker:
        ipv4_address: ${APP_SONARR_IP}
  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr
    restart: unless-stopped
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERSDIR}/radarr:/config
      - ${DLDIR}:/downloads
      - ${PELISDIR}:/movies
    #      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - qbittorrent
    networks:
      reddocker:
        ipv4_address: ${APP_RADARR_IP}
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${DOCKERSDIR}/qbittorrent/config:/config
      - ${DLDIR}:/downloads
    ports:
      - 61428:61428
      - 61428:61428/udp
      - 8080:8080
    restart: unless-stopped
    networks:
      reddocker:
        ipv4_address: ${APP_QBIT_IP}
  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ${DOCKERSDIR}/jackett:/config
      - ${DLDIR}/completed:/downloads
      - /etc/localtime:/etc/localtime:ro
    networks:
      reddocker:
        ipv4_address: ${APP_JACKETT_IP}
  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
    volumes:
      - ${DOCKERSDIR}/calibre-web:/config
      - ${LIBROSDIR}:/books
    ports:
      - 8088:8083
    restart: unless-stopped
    networks:
      reddocker:
        ipv4_address: ${APP_CALIBRE_WEB_IP}
  #   airsonic:
  #     image: lscr.io/linuxserver/airsonic-advanced
  #     container_name: airsonic
  #     environment:
  #       - PUID=${PUID}
  #       - PGID=${PGID}
  #       - TZ=${TZ}
  # #      - CONTEXT_PATH=URL_BASE #optional
  # #      - JAVA_OPTS=options #optional
  #     volumes:
  #       - ${DOCKERSDIR}/airsonic/config:/config
  #       - ${MUSICADIR}:/music
  #       - ${DOCKERSDIR}/airsonic/playlists:/playlists
  #       - ${DOCKERSDIR}/airsonic/podcasts:/podcasts
  #       - ${DOCKERSDIR}/airsonic/otros:/media
  #     ports:
  #       - 4040:4040
  # #     devices:
  # #       - /dev/snd:/dev/snd #optional
  #     restart: unless-stopped

  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    user: ${PUID}:${PGID} # should be owner of volumes
    ports:
      - 4533:4533
    restart: unless-stopped
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANSCHEDULE: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
      ND_TRANSCODINGCACHESIZE: 100MB
      ND_LASTFM_ENABLED: true
      ND_LASTFM_APIKEY: ${LASTFM_APIKEY}
      ND_LASTFM_SECRET: ${LASTFM_SECRET}
      ND_LASTFM_LANGUAGE: "es"
    volumes:
      - ${DOCKERSDIR}/navidrome:/data
      - ${MUSICADIR}:/music:ro
    networks:
      reddocker:
        ipv4_address: ${APP_NAVIDROME_IP}
  prowlarr:
    image: ghcr.io/hotio/prowlarr
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - $HOME/docker/prowlarr:/config
    ports:
      - 9697:9696
    restart: unless-stopped
    networks:
      reddocker:
        ipv4_address: ${APP_PROWLARR_IP}
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERSDIR}/bazarr:/config
      - ${PELISDIR}:/movies
      - ${SERIESDIR}:/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      reddocker:
        ipv4_address: ${APP_BAZARR_IP}
  nzbhydra2:
    image: lscr.io/linuxserver/nzbhydra2:latest
    container_name: nzbhydra2
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERSDIR}/nzbhydra:/config
      - ${DLDIR}/completed:/downloads
    ports:
      - 5076:5076
    restart: unless-stopped
    networks:
      reddocker:
        ipv4_address: ${APP_NZBH_IP}
  amule:
    image: ngosang/amule
    container_name: amule
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - GUI_PWD=${PASS}
      - WEBUI_PWD=${PASS}
      - MOD_AUTO_RESTART_ENABLED=true
      - MOD_AUTO_RESTART_CRON=0 3 * * *
    ports:
      - 4711:4711 # web ui
      - 4712:4712 # remote gui, webserver, cmd ...
      - 4662:4662 # ed2k tcp
      - 4665:4665/udp # ed2k global search udp (tcp port +3)
      - 4672:4672/udp # ed2k udp
    volumes:
      - $HOME/docker/amule:/home/amule/.aMule
      - ${DLDIR}/completed:/incoming
      - ${DLDIR}/incompleted:/temp
    restart: unless-stopped
    networks:
      reddocker:
        ipv4_address: ${APP_AMULE_IP}
# Redes
#networks:
#  default:
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.20.0.0/24
networks:
  reddocker:
    external: true
